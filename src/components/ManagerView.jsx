import React, { useEffect, useState } from "react";
import axios from "axios";

const ManagerView = () => {

    const [pendingForms, setPendingForms] = useState([]); // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å GM
    const [selectedForm, setSelectedForm] = useState(null);
    const [rolesState, setRolesState] = useState([]); // üî• ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å
    const [leavetpyeState, setLeavetpyeState] = useState([]); // üî• ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤

    const [managerName, setManagerName] = useState("");
    const [managerComment, setManagerComment] = useState("");
    const [approvedForms, setApprovedForms] = useState([]); // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
    const [selectedFormForEdit, setSelectedFormForEdit] = useState(null);

    const roleName = rolesState.find(item => item.rolesid === selectedForm?.rolesid)?.rolesname || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
    const leaveTypeName = leavetpyeState.find(item => item.leaveTypeid === selectedForm?.leaveTypeId)?.leaveTypeTh || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";

    const [lastleaveTypeName, setlastleaveTypeName] = useState("‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏")

    const [isEditing, setIsEditing] = useState(false);
    const [modalState, setModalState] = useState({
        isOpen: false,
        title: "",
        message: "",
        type: "success", // success | error
    });
    const [forms, setForms] = useState([]); // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
    const [selectedPendingForm, setSelectedPendingForm] = useState(null); // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
    const [selectedHRForm, setSelectedHRForm] = useState(null); // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ HR

    const [hrForms, setHrForms] = useState([]); // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ HR
    const [selectedFormToDelete, setSelectedFormToDelete] = useState(null); // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏∞‡∏•‡∏ö

    const closePendingFormModal = () => setSelectedPendingForm(null);
    const closeHRFormModal = () => setSelectedHRForm(null);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    useEffect(() => {
        fetchPendingForms();
        fetchRoles();
        fetchLeaveTypes();
        fetchDocumentByHRView();

    }, []);
    const fetchDocumentByHRView = async (docstatus) => {


        const response = await fetch(`https://localhost:7039/api/Document/GetPendingFormsForHR`);
        if (response.ok) {
            const data = await response.json();
            setApprovedForms(data);
        }
    }
    const addIdToForm = (form) => ({
        ...form,
        id: form.id || Date.now(), // ‡∏™‡∏£‡πâ‡∏≤‡∏á id ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
        userId: form.userId || sessionStorage.getItem("userId"), // ‡πÄ‡∏Å‡πá‡∏ö userId ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°
    const viewPendingFormDetails = (form) => {
        setSelectedPendingForm(form);
        setIsEditing(false); // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    };

    const viewHRFormDetails = async (form) => {
        try {
            const response = await fetch(`https://localhost:7039/api/Document/GetDocumentWithHistory/${form.documentId}`);
            if (response.ok) {
                const data = await response.json();

                setTimeout(() => {
                    let roleName = rolesState.find(x => x.rolesid === data.rolesid)?.rolesname || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
                    let leaveTypeTh = leavetpyeState.find(x => x.leaveTypeid === data.leaveTypeId)?.leaveTypeTh || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";

                    setSelectedHRForm({
                        ...data,
                        roleName,
                        leaveTypeTh,
                        historyRequset: data.historyleave || {
                            lastTotalStickDay: 0,
                            totalStickDay: 0,
                            sumStickDay: 0,
                            lastTotalPersonDay: 0,
                            totalPersonDay: 0,
                            sumPersonDay: 0,
                            lastTotalVacationDays: 0,
                            totalVacationDays: 0,
                            sumVacationDays: 0,
                            lastTotalMaternityDaystotal: 0,
                            totalMaternityDaystotal: 0,
                            sumMaternityDaystotal: 0,
                            lastTotalOrdinationDays: 0,
                            totalOrdinationDays: 0,
                            sumOrdinationDays: 0,
                        },
                    });

                    setlastleaveTypeName(leaveTypeTh);
                }, 500); // ‚úÖ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏ö
            } else {

                setSelectedHRForm(null);
            }
        } catch (error) {

        }
    };

    const fetchRoles = async () => {
        try {
            const response = await fetch("https://localhost:7039/api/Document/GetRoles");
            if (response.ok) {
                const data = await response.json();
                setRolesState(data);
            }
        } catch (error) {
        }
    };
    const fetchLeaveTypes = async () => {
        try {
            const response = await fetch("https://localhost:7039/api/Document/GetLeaveTypes");
            if (response.ok) {
                const data = await response.json();
                setLeavetpyeState(data);
                console.log(data)
            }
        } catch (error) {
            console.error("‚ùå Error fetching leave types:", error);
        }
    };

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠ GM ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å API
    const fetchPendingForms = async () => {
        try {
            const response = await fetch("https://localhost:7039/api/Document/GetPendingFormsForManager");
            if (response.ok) {
                const data = await response.json();
                console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:", data); // ‚úÖ ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ historyRequset ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                setPendingForms(data);
            } else {
                console.warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥");
                setPendingForms([]);
            }
        } catch (error) {
        }
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö "DD/MM/YYYY"
    const formatDate = (dateStr) => {
        if (!dateStr) return "-";
        const date = new Date(dateStr);
        return date.toLocaleDateString("th-TH", {
            day: "2-digit",
            month: "2-digit",
            year: "numeric",
        });
    };

    // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏° ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ
    const viewFormDetails = async (form) => {
        try {
            const response = await fetch(`https://localhost:7039/api/Document/GetDocumentWithHistory/${form.documentId}`);
            if (response.ok) {
                const data = await response.json();
                console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API:", data);

                // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ `lastleaveTypeName` ‡∏à‡∏≤‡∏Å `leavetpyeState`
                let leaveTypeTh = leavetpyeState.find(x => x.leaveTypeid === data.leavedType)?.leaveTypeTh || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";

                setSelectedForm({
                    ...data,
                    historyRequset: data.historyleave || {
                        lastTotalStickDay: 0,
                        totalStickDay: 0,
                        sumStickDay: 0,
                        lastTotalPersonDay: 0,
                        totalPersonDay: 0,
                        sumPersonDay: 0,
                        lastTotalVacationDays: 0,
                        totalVacationDays: 0,
                        sumVacationDays: 0,
                        lastTotalMaternityDaystotal: 0,
                        totalMaternityDaystotal: 0,
                        sumMaternityDaystotal: 0,
                        lastTotalOrdinationDays: 0,
                        totalOrdinationDays: 0,
                        sumOrdinationDays: 0,
                    },
                });

                setlastleaveTypeName(leaveTypeTh); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤
            } else {
                setSelectedForm(null);
            }
        } catch (error) {

        }
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
    const deleteForm = (formId) => {
        const updatedHrForms = hrForms.filter((form) => form.id !== formId);
        setHrForms(updatedHrForms);
        localStorage.setItem("hrForms", JSON.stringify(updatedHrForms));
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á Modal ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö
    const confirmDelete = (form) => {
        setSelectedFormToDelete(form);
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Modal
    const closeDeleteModal = () => {
        setSelectedFormToDelete(null);
    };
    const approveForm = async () => {
        if (!selectedForm) return;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠ GM ‡∏ñ‡∏π‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (!managerName.trim()) {
            setModalState({
                isOpen: true,
                title: "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
                message: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ü‡∏≠‡∏£‡πå‡∏°",
                type: "error",
            });
            return;
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ DocumentID
        if (!selectedForm.documentId || typeof selectedForm.documentId !== "string") {
            setModalState({
                isOpen: true,
                title: "‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                message: "DocumentID ‡∏Ç‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
                type: "error",
            });
            return;
        }

        const approvalData = {
            DocumentID: selectedForm.documentId,
            ManagerName: managerName.trim(),
            ManagerComment: managerComment.trim(),
            HRSignature: "", // ‚úÖ ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ HR
        };

        try {
            const response = await fetch("https://localhost:7039/api/Document/ApproveByManager", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(approvalData),
            });

            const responseData = await response.json();

            if (response.ok) {
                setModalState({
                    isOpen: true,
                    title: "‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                    message: "‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏ö‡∏•‡∏≤‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ HR",
                    type: "success",
                });

                setApprovedForms((prev) => {
                    const updatedForms = [
                        ...prev,
                        {
                            ...selectedForm,
                            approvedDate: new Date().toISOString(),
                            managerName,
                            managerComment,
                        },
                    ];

                    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á LocalStorage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏´‡∏≤‡∏¢
                    localStorage.setItem("approvedForms", JSON.stringify(updatedForms));

                    return updatedForms;
                });

                // ‡πÄ‡∏≠‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                setPendingForms((prev) =>
                    prev.filter((form) => form.documentId !== selectedForm.documentId)
                );

                setSelectedForm(null);
            } else {
                setModalState({
                    isOpen: true,
                    title: "‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                    message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
                    type: "error",
                });
            }
        } catch (error) {
            setModalState({
                isOpen: true,
                title: "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
                type: "error",
            });
        }
    };


    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡πâ HR
    const sendToHR = (form) => {
        if (!form.userId) {
            setModalState({
                isOpen: true,
                title: "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ HR ‡πÑ‡∏î‡πâ",
                message: "‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ userId ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ HR",
                type: "error",
            });
            return;
        }

        // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ HR
        const updatedForm = {
            ...form,
            sentToHRDate: new Date().toLocaleDateString(),
        };

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ HR
        const updatedHrForms = [...hrForms, updatedForm];

        // ‚úÖ ‡πÄ‡∏≠‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà GM ‡πÄ‡∏´‡πá‡∏ô
        const updatedApprovedForms = approvedForms.filter((f) => f.documentId !== form.documentId);

        // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÅ‡∏•‡∏∞ localStorage
        setHrForms(updatedHrForms);
        setApprovedForms(updatedApprovedForms);
        localStorage.setItem("hrForms", JSON.stringify(updatedHrForms));
        localStorage.setItem("approvedForms", JSON.stringify(updatedApprovedForms));

        setModalState({
            isOpen: true,
            title: "üì© ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÑ‡∏õ HR ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
            message: "HR ‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß",
            type: "success",
        });
    };


    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏≠‡∏£‡πå‡∏°
    const editApprovedForm = (form) => {
        setSelectedFormForEdit({ ...form }); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    };
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const saveEditedForm = async () => {
        console.log(selectedFormForEdit)


        if (!selectedFormForEdit) return;

        try {
            const response = await fetch("https://localhost:7039/api/Document/UpdateApprovedForm", {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    DocumentID: selectedFormForEdit.documentId,
                    ManagerName: selectedFormForEdit.managerName.trim(),
                    ManagerComment: selectedFormForEdit.managerComment.trim(),
                    HRSignature: "",
                }),
            });

            if (response.ok) {
                setApprovedForms((prev) =>
                    prev.map((form) =>
                        form.documentId === selectedFormForEdit.documentId ? selectedFormForEdit : form
                    )
                );

                // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï LocalStorage ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
                localStorage.setItem("approvedForms", JSON.stringify(approvedForms));

                setSelectedFormForEdit(null); // ‡∏õ‡∏¥‡∏î Modal

                setModalState({
                    isOpen: true,
                    title: "‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                    message: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß",
                    type: "success",
                });
            } else {
                throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
            }
        } catch (error) {
            console.error("‚ùå Error:", error);
            setModalState({
                isOpen: true,
                title: "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
                message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
                type: "error",
            });
        }
    };

    return (
        <div className="p-6">
            <h1 className="text-xl font-bold mb-4 font-FontNoto">‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏à‡∏≤‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h1>
            {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
            {pendingForms.length > 0 ? (
                <table className="table table-zebra w-full mt-6">
                    <thead>
                        <tr className="text-center bg-blue-100 text-black">
                            <th>#</th>
                            <th className="font-FontNoto">‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</th>
                            <th className="font-FontNoto">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á</th>
                            <th className="font-FontNoto">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody className="text-center text-black">
                        {pendingForms.map((form, index) => (
                            <tr key={form.documentId}>
                                <td className="font-FontNoto">{index + 1}</td>
                                <td className="font-FontNoto">{form.fullname}</td>
                                <td className="font-FontNoto">{formatDate(form.createdate)}</td>
                                <td>
                                    <button
                                        className="btn btn-sm btn-outline btn-info font-FontNoto mr-2"
                                        onClick={() => viewFormDetails(form)}
                                    >
                                        üëÅÔ∏è ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                                    </button>
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            ) : (
                <p className="font-FontNoto text-center">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</p>
            )}

            {/* ‚úÖ Modal ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏° */}
            {selectedForm && (
                <dialog open className="modal modal-open">
                    <div className="modal-box">
                        <h3 className="font-bold text-lg font-FontNoto text-center">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°</h3>

                        <table className="table table-zebra w-full mt-6">
                            <tbody>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '60px' }}><strong className="font-FontNoto">‡∏ä‡∏∑‡πà‡∏≠ :</strong> {selectedForm.fullname}</div>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á :</strong> {roleName}</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '100px' }}><strong className="font-FontNoto">‡∏Ç‡∏≠‡∏•‡∏≤ :</strong> {leaveTypeName}</div>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å :</strong> {selectedForm.reason}</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '25px' }}>
                                            <strong className="font-FontNoto">‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà :</strong> {formatDate(selectedForm?.startdate)}
                                        </div>
                                        <div className="font-FontNoto" style={{ marginRight: '20px' }}>
                                            <strong className="font-FontNoto">‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà :</strong> {formatDate(selectedForm?.enddate)}
                                        </div>

                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏Å‡∏≥‡∏´‡∏ô‡∏î :</strong> {selectedForm.totalleave} ‡∏ß‡∏±‡∏ô </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏•‡∏≤ :</strong> {lastleaveTypeName}</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '25px' }}>
                                            <strong className="font-FontNoto">‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:</strong> {formatDate(selectedForm?.leavedStartdate)}
                                        </div>
                                        <div className="font-FontNoto" style={{ marginRight: '20px' }}>
                                            <strong className="font-FontNoto">‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà :</strong> {formatDate(selectedForm?.leavedEnddate)}
                                        </div>

                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏Å‡∏≥‡∏´‡∏ô‡∏î :</strong> {selectedForm.totalleaved} ‡∏ß‡∏±‡∏ô </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '50px' }}><strong className="font-FontNoto">‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏•‡∏≤ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà:</strong> {selectedForm.friendeContact}</div>
                                        <div><strong className="font-FontNoto">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ :</strong> {selectedForm.contact}</div>
                                    </td>
                                </tr>
                                <tr className="font-FontNoto text-center">
                                    <td style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>
                                        <div className="font-FontNoto text-center">
                                            <strong className="font-FontNoto text-center">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡πÉ‡∏ô‡∏õ‡∏µ‡∏ô‡∏µ‡πâ ‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô:</strong> {formatDate(selectedForm?.workingstart)}

                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <thead className="text-center font-FontNoto">
                                        <tr>
                                            <th className="font-FontNoto">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤</th>
                                            <th className="font-FontNoto">‡∏•‡∏≤‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß (‡∏ß‡∏±‡∏ô)</th>
                                            <th className="font-FontNoto">‡∏•‡∏≤‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ (‡∏ß‡∏±‡∏ô)</th>
                                            <th className="font-FontNoto">‡∏£‡∏ß‡∏° (‡∏ß‡∏±‡∏ô)</th>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏õ‡πà‡∏ß‡∏¢</th>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.lastTotalStickDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.totalStickDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.sumStickDay ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</th>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.lastTotalPersonDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.totalPersonDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.sumPersonDay ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏û‡∏±‡∏Å‡∏£‡πâ‡∏≠‡∏ô</th>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.lastTotalVacationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.totalVacationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.sumVacationDays ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏Ñ‡∏•‡∏≠‡∏î‡∏ö‡∏∏‡∏ï‡∏£</th>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.lastTotalMaternityDaystotal ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.totalMaternityDaystotal ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.sumMaternityDaystotal ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏ö‡∏ß‡∏ä</th>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.lastTotalOrdinationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.totalOrdinationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedForm.historyRequset?.sumOrdinationDays ?? 0}</td>
                                        </tr>

                                    </thead>
                                </tr>
                            </tbody>
                        </table>

                        {/* ‚úÖ ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á */}
                        <div className="mt-4">
                            <label className="label">
                                <span className="label-text font-FontNoto">‡∏ä‡∏∑‡πà‡∏≠ GM :</span>
                            </label>
                            <input
                                type="text"
                                className="input input-bordered w-full font-FontNoto"
                                value={managerName}
                                onChange={(e) => {
                                    const value = e.target.value;
                                    setTimeout(() => {
                                        const onlyText = value.replace(/[0-9]/g, ""); // ‚úÖ ‡∏•‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
                                        setManagerName(onlyText);
                                    }, 0); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏£‡∏∞‡πÑ‡∏ó‡∏¢‡∏´‡∏≤‡∏¢
                                }}

                            />
                            <label className="label mt-2">
                                <span className="label-text font-FontNoto">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô :</span>
                            </label>
                            <textarea
                                className="textarea textarea-bordered w-full font-FontNoto"
                                value={managerComment}
                                onChange={(e) => setManagerComment(e.target.value)}
                            />
                        </div>

                        <div className="modal-action">
                            <button
                                className="btn btn-outline btn-success font-FontNoto"
                                onClick={approveForm}
                            >
                                ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                            </button>
                            <button
                                className="btn btn-outline btn-error font-FontNoto"
                                onClick={() => setSelectedForm(null)}
                            >
                                ‚ùå ‡∏õ‡∏¥‡∏î
                            </button>
                        </div>
                    </div>
                </dialog>
            )}
            {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß */}
            <h2 className="text-xl font-bold mt-8 font-FontNoto">‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß</h2>
            {approvedForms.length > 0 ? (
                <table className="table table-zebra w-full text-black">
                    <thead>
                        <tr className="text-black bg-blue-100">
                            <th>#</th>
                            <th className="font-FontNoto">‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</th>
                            <th className="font-FontNoto">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</th>
                            <th className="font-FontNoto">‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</th>
                            <th className="font-FontNoto">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô</th>
                            <th className="font-FontNoto text-center">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody>
                        {approvedForms.map((form, index) => (
                            <tr key={form.id || index}>
                                <td className="font-FontNoto">{index + 1}</td>
                                <td className="font-FontNoto">{form.fullname}</td>
                                <td className="font-FontNoto">{formatDate(form.approvedDate)}</td>
                                <td className="font-FontNoto">{form.managerName}</td>
                                <td className="font-FontNoto">{form.managerComment}</td>
                                <td className="flex flex-col gap-2">

                                    <button
                                        className="btn btn-sm btn-outline btn-warning font-FontNoto"
                                        onClick={() => editApprovedForm(form)}
                                    >
                                        ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                    </button>
                                    <button
                                        className="btn btn-sm btn-outline btn-secondary font-FontNoto"
                                        onClick={() => viewHRFormDetails(form)}
                                    >
                                        ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                                    </button>

                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            ) : (
                <p className="font-FontNoto text-center">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</p>
            )}

            {/* Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏≠‡∏£‡πå‡∏° */}
            {selectedFormForEdit && (
                <dialog open className="modal modal-open">
                    <div className="modal-box">
                        <h3 className="font-bold text-lg font-FontNoto">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
                        <label className="label">
                            <span className="label-text font-FontNoto">‡∏ä‡∏∑‡πà‡∏≠ GM:</span>
                        </label>
                        <input
                            type="text"
                            className="input input-bordered w-full font-FontNoto"
                            value={selectedFormForEdit.managerName}
                            onChange={(e) => {
                                const value = e.target.value;
                                setTimeout(() => {
                                    const onlyText = value.replace(/[0-9]/g, ""); // ‚úÖ ‡∏•‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
                                    setSelectedFormForEdit({ ...selectedFormForEdit, managerName: onlyText });
                                }, 0); // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏£‡∏∞‡πÑ‡∏ó‡∏¢‡∏´‡∏≤‡∏¢
                            }}
                        />

                        <label className="label mt-2">
                            <span className="label-text font-FontNoto">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô:</span>
                        </label>
                        <textarea
                            className="textarea textarea-bordered w-full font-FontNoto"
                            value={selectedFormForEdit.managerComment}
                            onChange={(e) =>
                                setSelectedFormForEdit({ ...selectedFormForEdit, managerComment: e.target.value })
                            }
                        />

                        <div className="modal-action">
                            <button className="btn btn-outline btn-success font-FontNoto" onClick={saveEditedForm}>
                                ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                            </button>
                            <button className="btn btn-outline btn-error font-FontNoto" onClick={() => setSelectedFormForEdit(null)}>
                                ‡∏õ‡∏¥‡∏î
                            </button>
                        </div>
                    </div>
                </dialog>
            )}


            {/* Modal ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° */}
            {selectedFormToDelete && (
                <dialog open className="modal modal-open">
                    <div className="modal-box">
                        <h3 className="font-bold text-lg font-FontNoto">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö</h3>
                        <p className="font-FontNoto">‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏•‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ô‡∏µ‡πâ?</p>
                        <div className="modal-action">
                            <button
                                className="btn btn-outline btn-error font-FontNoto"
                                onClick={() => {
                                    deleteForm(selectedFormToDelete.id);
                                    closeDeleteModal();
                                }}
                            >
                                ‡∏ï‡∏Å‡∏•‡∏á
                            </button>
                            <button
                                className="btn btn-outline btn-warning font-FontNoto"
                                onClick={closeDeleteModal}
                            >
                                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                            </button>
                        </div>
                    </div>
                </dialog>
            )}
            {modalState.isOpen && (
                <dialog open className="modal modal-open">
                    <div className="modal-box">
                        <h3 className={`font-bold text-lg font-FontNoto ${modalState.type === "success" ? "text-green-600" : "text-red-600"}`}>
                            {modalState.title}
                        </h3>
                        <p className="py-4 font-FontNoto">{modalState.message}</p>
                        <div className="modal-action">
                            <button className={`btn font-FontNoto ${modalState.type === "success" ? "btn-success" : "btn btn-outline btn-error font-FontNoto"}`}
                                onClick={() => setModalState({ ...modalState, isOpen: false })}>
                                ‡∏õ‡∏¥‡∏î
                            </button>
                        </div>
                    </div>
                </dialog>
            )}
            {/* Modal ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ HR */}
            {selectedHRForm && (
                <dialog open className="modal modal-open">
                    <div className="modal-box">
                        <h3 className="font-bold text-lg font-FontNoto text-center">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°</h3>
                        <table className="table table-zebra w-full mt-6">
                            <tbody>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '40px' }}><strong className="font-FontNoto">‡∏ä‡∏∑‡πà‡∏≠ :</strong> {selectedHRForm.fullname}</div>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á :</strong> {selectedHRForm?.roleName || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '100px' }}><strong className="font-FontNoto">‡∏Ç‡∏≠‡∏•‡∏≤ :</strong> {selectedHRForm?.leaveTypeTh || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</div>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å :</strong> {selectedHRForm.reason}</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '25px' }}><strong className="font-FontNoto">‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà :</strong> {formatDate(selectedHRForm?.startdate)}</div>
                                        <div className="font-FontNoto" style={{ marginRight: '20px' }}><strong className="font-FontNoto">‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà :</strong> {formatDate(selectedHRForm?.enddate)}</div>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏Å‡∏≥‡∏´‡∏ô‡∏î :</strong> {selectedHRForm.totalleave} ‡∏ß‡∏±‡∏ô </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏•‡∏≤ :</strong> {lastleaveTypeName}</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '25px' }}><strong className="font-FontNoto">‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:</strong> {formatDate(selectedHRForm?.leavedStartdate)}</div>
                                        <div className="font-FontNoto" style={{ marginRight: '20px' }}><strong className="font-FontNoto">‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà :</strong> {formatDate(selectedHRForm?.leavedEnddate)}</div>
                                        <div className="font-FontNoto"><strong className="font-FontNoto">‡∏Å‡∏≥‡∏´‡∏ô‡∏î :</strong> {selectedHRForm.totalleaved} ‡∏ß‡∏±‡∏ô </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" style={{ display: 'flex' }}>
                                        <div className="font-FontNoto" style={{ marginRight: '50px' }}><strong className="font-FontNoto">‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏•‡∏≤ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà:</strong> {selectedHRForm.friendeContact}</div>
                                        <div><strong className="font-FontNoto">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ :</strong> {selectedHRForm.contact}</div>
                                    </td>
                                </tr>
                                <tr className="font-FontNoto text-center">
                                    <td style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>
                                        <div className="font-FontNoto text-center">
                                            <strong className="font-FontNoto text-center">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡πÉ‡∏ô‡∏õ‡∏µ‡∏ô‡∏µ‡πâ ‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô:</strong> {formatDate(selectedHRForm?.workingstart)}
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <thead className="text-center font-FontNoto">
                                        <tr>
                                            <th className="font-FontNoto">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏•‡∏≤</th>
                                            <th className="font-FontNoto">‡∏•‡∏≤‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß (‡∏ß‡∏±‡∏ô)</th>
                                            <th className="font-FontNoto">‡∏•‡∏≤‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ (‡∏ß‡∏±‡∏ô)</th>
                                            <th className="font-FontNoto">‡∏£‡∏ß‡∏° (‡∏ß‡∏±‡∏ô)</th>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏õ‡πà‡∏ß‡∏¢</th>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.lastTotalStickDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.totalStickDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.sumStickDay ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</th>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.lastTotalPersonDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.totalPersonDay ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.sumPersonDay ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏û‡∏±‡∏Å‡∏£‡πâ‡∏≠‡∏ô</th>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.lastTotalVacationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.totalVacationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.sumVacationDays ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏Ñ‡∏•‡∏≠‡∏î‡∏ö‡∏∏‡∏ï‡∏£</th>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.lastTotalMaternityDaystotal ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.totalMaternityDaystotal ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.sumMaternityDaystotal ?? 0}</td>
                                        </tr>
                                        <tr>
                                            <th className="font-FontNoto">‡∏ö‡∏ß‡∏ä</th>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.lastTotalOrdinationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.totalOrdinationDays ?? 0}</td>
                                            <td className="font-FontNoto text-center">{selectedHRForm.historyRequset?.sumOrdinationDays ?? 0}</td>
                                        </tr>
                                    </thead>
                                </tr>
                            </tbody>
                        </table>

                        <div className="modal-action">
                            <button
                                className="btn btn-outline btn-error font-FontNoto"
                                onClick={() => closeHRFormModal(null)}
                            >
                                ‡∏õ‡∏¥‡∏î
                            </button>
                        </div>
                    </div>
                </dialog>
            )}
        </div>
    );
};

export default ManagerView;
